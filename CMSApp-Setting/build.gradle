plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.sds.cmssetting'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
repositories {
	mavenCentral()
}
ext {
	set('springCloudVersion', "2023.0.2")
}
dependencies {
	
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	// config server 클라이언트 등록
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	
	// Eureka 클라이언트로 등록
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	// MySQL Driver
	// https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
	implementation 'com.mysql:mysql-connector-j:8.4.0'
	
	// Spring Boot Starter JDBC
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-jdbc
	implementation 'org.springframework.boot:spring-boot-starter-jdbc:3.3.0'
	
	// mybatis Spring 버전 높은 것: @Mapper 지원을 위함
	// https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	
	//스프링 시큐리티 추가 spring boot starter security
	implementation 'org.springframework.boot:spring-boot-starter-security:3.2.5'
	
	//AOP 추가
	implementation 'org.springframework.boot:spring-boot-starter-aop:3.2.5'
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	// io.jsonwebtoken
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'	

	/////////////////////////////////////////////////////////////////////////////////////////////////////

	//Gson (JSON을 자바 객체로 변환)
	implementation 'com.google.code.gson:gson:2.9.1'
	
	//json simple (String  을 JSON으로 파싱할때) 
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	
	
	// https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
	//compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
	
	implementation 'javax.xml.ws:jaxws-api:2.3.1'
	implementation 'com.sun.xml.ws:jaxws-rt:2.3.3'
	implementation 'com.sun.xml.messaging.saaj:saaj-impl:1.5.3'
	implementation 'com.sun.xml.bind:jaxb-impl:2.3.3'	

}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
tasks.named('test') {
	useJUnitPlatform()
}
